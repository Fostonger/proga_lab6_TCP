package data;

import java.time.LocalDate;

public class Route implements Comparable<Route> {
    private final Integer id; //Поле не может быть null, Значение поля должно быть больше 0, Значение этого поля должно быть уникальным, Значение этого поля должно генерироваться автоматически
    private final String name; //Поле не может быть null, Строка не может быть пустой
    private final Coordinates coordinates; //Поле не может быть null
    private final java.time.LocalDate creationDate; //Поле не может быть null, Значение этого поля должно генерироваться автоматически
    private final Location from; //Поле может быть null
    private final Location to; //Поле не может быть null
    private final double distance; //Значение поля должно быть больше 1
    private final String author;

    /**
     * Base class that is stored in database
     * @param id id of the route, autogenerated when created
     * @param coordinates coordinates of the route, nonnull parameter
     * @param creationDate date when the route was created, autogenerated when created
     * @param distance distance of the route
     * @param to location "to" of the route, cannot be null
     * @param from location "from" of the route, can be null
     * @param name name of the route, nonnull parameter
     */
    public Route(Integer id, Coordinates coordinates, LocalDate creationDate, double distance,
            Location to, Location from, String name,
            String author) {
        this.id = id;
        this.coordinates = coordinates;
        this.creationDate = creationDate;
        this.distance = distance;
        this.to = to;
        this.from = from;
        this.name = name;
        this.author = author;
    }
    public String getName() {
        return name;
    }
    public Integer getId() {
        return id;
    }
    public double getDistance() {
        return distance;
    }
    public Location getFrom() {
        return from;
    }
    public Coordinates getCoordinates() {
        return coordinates;
    }
    public LocalDate getCreationDate() {
        return creationDate;
    }
    public Location getTo() {
        return to;
    }
    public String getAuthor() { return author; }

    /**
     * overridden method to use in need of printing the route
     * @return printable string representation of the route
     */
    @Override
    public String toString() {
        return "id: \t\t\t\t" + id + "\n" +
                "name:\t\t\t\t" + name + "\n" +
                "coordinates:\n" + coordinates.toString() + "\n" +
                "creation date:\t\t" + creationDate.toString() + "\n" +
                "from:\t\t\t\t" + ((from != null) ? ("\n" + from.toString()) : "null") + "\n" +
                "to:\n" + to.toString() + "\n" +
                "distance:\t\t\t" + distance + "\n" +
                "author:\t\t\t\t" + author + "\n";
    }

    @Override
    public int compareTo(Route o) {
        return Integer.compare(this.id, o.id);
    }
}
